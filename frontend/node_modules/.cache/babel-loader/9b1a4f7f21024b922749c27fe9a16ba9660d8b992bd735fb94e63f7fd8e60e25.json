{"ast":null,"code":"var _jsxFileName = \"C:\\\\project\\\\ocr\\\\ocr2\\\\ocrnew\\\\newocr3\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { toast, ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport DocumentUploader from './components/DocumentUploader';\nimport ResultsDisplay from './components/ResultsDisplay';\nimport SystemStats from './components/SystemStats';\nimport { uploadDocument, getSystemStats, testBackendConnection } from './services/api-debug';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [results, setResults] = useState([]);\n  const [stats, setStats] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [backendConnected, setBackendConnected] = useState(false);\n\n  // Test backend connection and load stats on component mount\n  useEffect(() => {\n    testBackendConnectionFunc();\n  }, []);\n  const testBackendConnectionFunc = async () => {\n    console.log('🔍 Testing backend connection from React app...');\n    try {\n      const result = await testBackendConnection();\n      if (result.success) {\n        setBackendConnected(true);\n        toast.success('Connected to backend successfully!');\n        console.log('✅ Backend connection successful');\n        loadStats();\n      } else {\n        setBackendConnected(false);\n        toast.error(`Backend connection failed: ${result.message}`);\n        console.error('❌ Backend connection failed:', result);\n      }\n    } catch (error) {\n      setBackendConnected(false);\n      toast.error('Cannot connect to backend. Please ensure the backend server is running on port 5000.');\n      console.error('❌ Backend connection error:', error);\n    }\n  };\n  const loadStats = async () => {\n    try {\n      const response = await getSystemStats();\n      if (response.data.success) {\n        setStats(response.data.data);\n      }\n    } catch (error) {\n      console.error('Failed to load stats:', error);\n    }\n  };\n  const handleDocumentUpload = async (file, documentType) => {\n    setLoading(true);\n    try {\n      const response = await uploadDocument(file, documentType);\n      if (response.data.success) {\n        // Success - add to results\n        const newResult = {\n          id: Date.now(),\n          type: 'success',\n          documentType: response.data.data.documentType,\n          extractedFields: response.data.data.extractedFields,\n          userId: response.data.data.userId,\n          confidence: response.data.data.confidence,\n          timestamp: new Date().toLocaleString()\n        };\n        setResults(prev => [newResult, ...prev]);\n        toast.success('Document processed successfully!');\n\n        // Reload stats\n        loadStats();\n      } else {\n        // Handle different error types\n        const errorType = response.data.error;\n        let errorResult;\n        if (errorType === 'DUPLICATE_DOCUMENT') {\n          var _response$data$data, _response$data$data2;\n          errorResult = {\n            id: Date.now(),\n            type: 'duplicate',\n            documentType: documentType,\n            message: response.data.message,\n            duplicateInfo: (_response$data$data = response.data.data) === null || _response$data$data === void 0 ? void 0 : _response$data$data.duplicateInfo,\n            existingRecord: (_response$data$data2 = response.data.data) === null || _response$data$data2 === void 0 ? void 0 : _response$data$data2.existingRecord,\n            timestamp: new Date().toLocaleString()\n          };\n          toast.warning('Duplicate document detected!');\n        } else {\n          errorResult = {\n            id: Date.now(),\n            type: 'error',\n            documentType: documentType,\n            message: response.data.message,\n            error: errorType,\n            timestamp: new Date().toLocaleString()\n          };\n          toast.error(`Processing failed: ${response.data.message}`);\n        }\n        setResults(prev => [errorResult, ...prev]);\n      }\n    } catch (error) {\n      var _error$response, _error$response$data;\n      console.error('Upload error:', error);\n      const errorResult = {\n        id: Date.now(),\n        type: 'error',\n        documentType: documentType,\n        message: ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Network error occurred',\n        error: 'NETWORK_ERROR',\n        timestamp: new Date().toLocaleString()\n      };\n      setResults(prev => [errorResult, ...prev]);\n      toast.error('Upload failed. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const clearResults = () => {\n    setResults([]);\n    toast.info('Results cleared');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Document Processing System\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Upload Aadhaar and PAN cards for automated field extraction\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: '10px',\n          padding: '8px 16px',\n          borderRadius: '20px',\n          background: backendConnected ? '#28a745' : '#dc3545',\n          color: 'white',\n          fontSize: '14px',\n          display: 'inline-block'\n        },\n        children: backendConnected ? '🟢 Backend Connected' : '🔴 Backend Disconnected'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"main-content\",\n      children: [/*#__PURE__*/_jsxDEV(DocumentUploader, {\n        onUpload: handleDocumentUpload,\n        loading: loading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ResultsDisplay, {\n        results: results,\n        onClear: clearResults\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 17\n      }, this), stats && /*#__PURE__*/_jsxDEV(SystemStats, {\n        stats: stats\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {\n      position: \"top-right\",\n      autoClose: 5000,\n      hideProgressBar: false,\n      newestOnTop: false,\n      closeOnClick: true,\n      rtl: false,\n      pauseOnFocusLoss: true,\n      draggable: true,\n      pauseOnHover: true,\n      theme: \"light\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 132,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"VhNn0E78JXebN6rADi7XoqOZ8nE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","toast","ToastContainer","DocumentUploader","ResultsDisplay","SystemStats","uploadDocument","getSystemStats","testBackendConnection","jsxDEV","_jsxDEV","App","_s","results","setResults","stats","setStats","loading","setLoading","backendConnected","setBackendConnected","testBackendConnectionFunc","console","log","result","success","loadStats","error","message","response","data","handleDocumentUpload","file","documentType","newResult","id","Date","now","type","extractedFields","userId","confidence","timestamp","toLocaleString","prev","errorType","errorResult","_response$data$data","_response$data$data2","duplicateInfo","existingRecord","warning","_error$response","_error$response$data","clearResults","info","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","marginTop","padding","borderRadius","background","color","fontSize","display","onUpload","onClear","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","theme","_c","$RefreshReg$"],"sources":["C:/project/ocr/ocr2/ocrnew/newocr3/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { toast, ToastContainer } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport DocumentUploader from './components/DocumentUploader';\r\nimport ResultsDisplay from './components/ResultsDisplay';\r\nimport SystemStats from './components/SystemStats';\r\nimport { uploadDocument, getSystemStats, testBackendConnection } from './services/api-debug';\r\n\r\nfunction App() {\r\n    const [results, setResults] = useState([]);\r\n    const [stats, setStats] = useState(null);\r\n    const [loading, setLoading] = useState(false);\r\n    const [backendConnected, setBackendConnected] = useState(false);\r\n\r\n    // Test backend connection and load stats on component mount\r\n    useEffect(() => {\r\n        testBackendConnectionFunc();\r\n    }, []);\r\n\r\n    const testBackendConnectionFunc = async () => {\r\n        console.log('🔍 Testing backend connection from React app...');\r\n\r\n        try {\r\n            const result = await testBackendConnection();\r\n\r\n            if (result.success) {\r\n                setBackendConnected(true);\r\n                toast.success('Connected to backend successfully!');\r\n                console.log('✅ Backend connection successful');\r\n                loadStats();\r\n            } else {\r\n                setBackendConnected(false);\r\n                toast.error(`Backend connection failed: ${result.message}`);\r\n                console.error('❌ Backend connection failed:', result);\r\n            }\r\n        } catch (error) {\r\n            setBackendConnected(false);\r\n            toast.error('Cannot connect to backend. Please ensure the backend server is running on port 5000.');\r\n            console.error('❌ Backend connection error:', error);\r\n        }\r\n    };\r\n\r\n    const loadStats = async () => {\r\n        try {\r\n            const response = await getSystemStats();\r\n            if (response.data.success) {\r\n                setStats(response.data.data);\r\n            }\r\n        } catch (error) {\r\n            console.error('Failed to load stats:', error);\r\n        }\r\n    };\r\n\r\n    const handleDocumentUpload = async (file, documentType) => {\r\n        setLoading(true);\r\n\r\n        try {\r\n            const response = await uploadDocument(file, documentType);\r\n\r\n            if (response.data.success) {\r\n                // Success - add to results\r\n                const newResult = {\r\n                    id: Date.now(),\r\n                    type: 'success',\r\n                    documentType: response.data.data.documentType,\r\n                    extractedFields: response.data.data.extractedFields,\r\n                    userId: response.data.data.userId,\r\n                    confidence: response.data.data.confidence,\r\n                    timestamp: new Date().toLocaleString()\r\n                };\r\n\r\n                setResults(prev => [newResult, ...prev]);\r\n                toast.success('Document processed successfully!');\r\n\r\n                // Reload stats\r\n                loadStats();\r\n            } else {\r\n                // Handle different error types\r\n                const errorType = response.data.error;\r\n                let errorResult;\r\n\r\n                if (errorType === 'DUPLICATE_DOCUMENT') {\r\n                    errorResult = {\r\n                        id: Date.now(),\r\n                        type: 'duplicate',\r\n                        documentType: documentType,\r\n                        message: response.data.message,\r\n                        duplicateInfo: response.data.data?.duplicateInfo,\r\n                        existingRecord: response.data.data?.existingRecord,\r\n                        timestamp: new Date().toLocaleString()\r\n                    };\r\n                    toast.warning('Duplicate document detected!');\r\n                } else {\r\n                    errorResult = {\r\n                        id: Date.now(),\r\n                        type: 'error',\r\n                        documentType: documentType,\r\n                        message: response.data.message,\r\n                        error: errorType,\r\n                        timestamp: new Date().toLocaleString()\r\n                    };\r\n                    toast.error(`Processing failed: ${response.data.message}`);\r\n                }\r\n\r\n                setResults(prev => [errorResult, ...prev]);\r\n            }\r\n        } catch (error) {\r\n            console.error('Upload error:', error);\r\n\r\n            const errorResult = {\r\n                id: Date.now(),\r\n                type: 'error',\r\n                documentType: documentType,\r\n                message: error.response?.data?.message || 'Network error occurred',\r\n                error: 'NETWORK_ERROR',\r\n                timestamp: new Date().toLocaleString()\r\n            };\r\n\r\n            setResults(prev => [errorResult, ...prev]);\r\n            toast.error('Upload failed. Please try again.');\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    const clearResults = () => {\r\n        setResults([]);\r\n        toast.info('Results cleared');\r\n    };\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <header className=\"header\">\r\n                <h1>Document Processing System</h1>\r\n                <p>Upload Aadhaar and PAN cards for automated field extraction</p>\r\n                <div style={{\r\n                    marginTop: '10px',\r\n                    padding: '8px 16px',\r\n                    borderRadius: '20px',\r\n                    background: backendConnected ? '#28a745' : '#dc3545',\r\n                    color: 'white',\r\n                    fontSize: '14px',\r\n                    display: 'inline-block'\r\n                }}>\r\n                    {backendConnected ? '🟢 Backend Connected' : '🔴 Backend Disconnected'}\r\n                </div>\r\n            </header>\r\n\r\n            <main className=\"main-content\">\r\n                <DocumentUploader\r\n                    onUpload={handleDocumentUpload}\r\n                    loading={loading}\r\n                />\r\n\r\n                <ResultsDisplay\r\n                    results={results}\r\n                    onClear={clearResults}\r\n                />\r\n\r\n                {stats && (\r\n                    <SystemStats stats={stats} />\r\n                )}\r\n            </main>\r\n\r\n            <ToastContainer\r\n                position=\"top-right\"\r\n                autoClose={5000}\r\n                hideProgressBar={false}\r\n                newestOnTop={false}\r\n                closeOnClick\r\n                rtl={false}\r\n                pauseOnFocusLoss\r\n                draggable\r\n                pauseOnHover\r\n                theme=\"light\"\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}